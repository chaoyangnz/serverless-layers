{"version":3,"sources":["../../src/aws/LayersService.js"],"names":["AbstractService","require","LayersService","publishVersion","params","Content","S3Bucket","bucketName","S3Key","zipFileKeyName","LayerName","layerName","Description","CompatibleRuntimes","plugin","settings","compatibleRuntimes","provider","request","then","result","log","cacheObject","LayerVersionArn","catch","e","console","message","process","exit","cleanUpLayers","response","LayerVersions","length","deleteQueue","map","layerVersion","Version","VersionNumber","Promise","all","module","exports"],"mappings":";;AAAA,MAAMA,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAA/B;;AAEA,MAAMC,aAAN,SAA4BF,eAA5B,CAA4C;AAC1C,QAAMG,cAAN,GAAuB;AACrB,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,QAAQ,EAAE,KAAKC,UADR;AAEPC,QAAAA,KAAK,EAAE,KAAKC;AAFL,OADI;AAKbC,MAAAA,SAAS,EAAE,KAAKC,SALH;AAMbC,MAAAA,WAAW,EAAE,qCANA;AAObC,MAAAA,kBAAkB,EAAE,KAAKC,MAAL,CAAYC,QAAZ,CAAqBC;AAP5B,KAAf;AAUA,WAAO,KAAKC,QAAL,CAAcC,OAAd,CAAsB,QAAtB,EAAgC,qBAAhC,EAAuDd,MAAvD,EACJe,IADI,CACEC,MAAD,IAAY;AAChB,WAAKN,MAAL,CAAYO,GAAZ,CAAgB,gCAAhB;AACA,WAAKP,MAAL,CAAYQ,WAAZ,CAAwBC,eAAxB,GAA0CH,MAAM,CAACG,eAAjD;AACA,aAAOH,MAAP;AACD,KALI,EAMJI,KANI,CAMEC,CAAC,IAAI;AACVC,MAAAA,OAAO,CAACL,GAAR,CAAYI,CAAC,CAACE,OAAd;AACAC,MAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACD,KATI,CAAP;AAUD;;AAED,QAAMC,aAAN,GAAsB;AACpB,UAAM1B,MAAM,GAAG;AACbM,MAAAA,SAAS,EAAE,KAAKC;AADH,KAAf;AAIA,UAAMoB,QAAQ,GAAG,MAAM,KAAKd,QAAL,CAAcC,OAAd,CAAsB,QAAtB,EAAgC,mBAAhC,EAAqDd,MAArD,CAAvB;;AAEA,QAAI2B,QAAQ,CAACC,aAAT,CAAuBC,MAAvB,KAAkC,CAAtC,EAAyC;AACvC,WAAKnB,MAAL,CAAYO,GAAZ,CAAgB,0BAAhB;AACA;AACD;;AAED,UAAMa,WAAW,GAAGH,QAAQ,CAACC,aAAT,CAAuBG,GAAvB,CAA4BC,YAAD,IAAkB;AAC/D,WAAKtB,MAAL,CAAYO,GAAZ,CAAiB,2BAA0Be,YAAY,CAACC,OAAQ,EAAhE;AACA,aAAO,KAAKpB,QAAL,CAAcC,OAAd,CAAsB,QAAtB,EAAgC,oBAAhC,EAAsD;AAC3DR,QAAAA,SAAS,EAAE,KAAKC,SAD2C;AAE3D2B,QAAAA,aAAa,EAAEF,YAAY,CAACC;AAF+B,OAAtD,CAAP;AAID,KANmB,CAApB;AAQA,UAAME,OAAO,CAACC,GAAR,CAAYN,WAAZ,CAAN;AAEA,UAAM,KAAKJ,aAAL,EAAN;AACD;;AA/CyC;;AAkD5CW,MAAM,CAACC,OAAP,GAAiBxC,aAAjB","sourcesContent":["const AbstractService = require('../AbstractService');\n\nclass LayersService extends AbstractService {\n  async publishVersion() {\n    const params = {\n      Content: {\n        S3Bucket: this.bucketName,\n        S3Key: this.zipFileKeyName\n      },\n      LayerName: this.layerName,\n      Description: 'created by serverless-layers plugin',\n      CompatibleRuntimes: this.plugin.settings.compatibleRuntimes\n    };\n\n    return this.provider.request('Lambda', 'publishLayerVersion', params)\n      .then((result) => {\n        this.plugin.log('New layer version published...');\n        this.plugin.cacheObject.LayerVersionArn = result.LayerVersionArn;\n        return result;\n      })\n      .catch(e => {\n        console.log(e.message);\n        process.exit(1);\n      });\n  }\n\n  async cleanUpLayers() {\n    const params = {\n      LayerName: this.layerName\n    };\n\n    const response = await this.provider.request('Lambda', 'listLayerVersions', params);\n\n    if (response.LayerVersions.length === 0) {\n      this.plugin.log('Layers removal finished.');\n      return;\n    }\n\n    const deleteQueue = response.LayerVersions.map((layerVersion) => {\n      this.plugin.log(`Removing layer version: ${layerVersion.Version}`);\n      return this.provider.request('Lambda', 'deleteLayerVersion', {\n        LayerName: this.layerName,\n        VersionNumber: layerVersion.Version\n      });\n    });\n\n    await Promise.all(deleteQueue);\n\n    await this.cleanUpLayers();\n  }\n}\n\nmodule.exports = LayersService;\n"],"file":"LayersService.js"}