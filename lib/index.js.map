{"version":3,"sources":["../src/index.js"],"names":["BbPromise","require","path","slugify","chalk","semver","Runtimes","LayersService","BucketService","CloudFormationService","ZipService","LocalFolders","Dependencies","ServerlessLayers","constructor","serverless","options","cacheObject","initialized","hooks","bind","then","init","deployLayers","finalizeDeploy","cleanUpAllLayers","provider","getProvider","service","region","getRegion","log","main","version","getVersion","lt","process","exit","runtimes","settings","getSettings","cliOpts","layerName","currentSettings","enabledFuncs","functions","deploySingle","function","indexOf","logGroup","initServices","console","arn","warn","cleanUpLayers","currentLayerName","zipService","dependencies","localFolders","layersService","bucketService","cloudFormationService","mergeCommonSettings","inboundSetting","dependencyInstall","compileDir","customInstallationCommand","layersDeploymentBucket","deploymentBucket","getDefaultSettings","inboundSettings","custom","Array","isArray","forEach","Object","keys","default","hasSettingsChanged","hasSettingsVerified","localDir","manifest","JSON","stringify","getFile","remoteSettings","putFile","relateLayerWithFunctions","hasFoldersChanged","hasDepsChanged","hasDependencesChanged","hasChanged","mergePackageOptions","currentLayerARN","getLayerArn","inverse","green","logArn","install","copyFolders","package","uploadZipFile","publishVersion","getDepsPath","LayerVersionArn","getLayerName","stackName","getStackName","runtimeDir","lower","replacement","naming","getBucketName","Error","getPathZipFileName","join","cwd","getBucketLayersPath","serviceStage","stage","deploymentPrefix","getDeploymentPrefix","replace","layersArn","outputs","getOutputs","logicalId","getOutputLogicalId","find","x","OutputKey","OutputValue","getLambdaLayerOutputLogicalId","packageExclude","pkg","opts","individually","excludeDevDependencies","exclude","excludeFile","hasRule","push","layerArn","funcs","funcName","isEnabled","layers","from","Set","magenta","bold","resources","Outputs","outputName","assign","Value","Export","Name","getDependenciesList","localPackage","map","lambdaFunc","length","msg","signal","greenBright","white","cli","yellowBright","error","red","pattern","name","formated","text","Ref","String","module","exports"],"mappings":"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","sourcesContent":["const BbPromise = require('bluebird');\nconst path = require('path');\nconst slugify = require('slugify');\nconst chalk = require('chalk');\nconst semver = require('semver');\nconst Runtimes = require('./runtimes');\nconst LayersService = require('./aws/LayersService');\nconst BucketService = require('./aws/BucketService');\nconst CloudFormationService = require('./aws/CloudFormationService');\nconst ZipService = require('./package/ZipService');\nconst LocalFolders = require('./package/LocalFolders');\nconst Dependencies = require('./package/Dependencies');\n\nclass ServerlessLayers {\n  constructor(serverless, options) {\n    this.cacheObject = {};\n    this.options = options;\n    this.serverless = serverless;\n    this.initialized = false;\n\n    // hooks\n    this.hooks = {\n      'before:package:function:package': () => BbPromise.bind(this)\n        .then(() => {\n          return this.init()\n            .then(() => this.deployLayers())\n        }),\n      'before:package:initialize': () => BbPromise.bind(this)\n        .then(() => {\n          return this.init()\n            .then(() => this.deployLayers())\n        }),\n      'aws:info:displayLayers': () => BbPromise.bind(this)\n        .then(() => this.init())\n        .then(() => this.finalizeDeploy()),\n      'after:deploy:function:deploy': () => BbPromise.bind(this)\n        .then(() => this.init())\n        .then(() => this.finalizeDeploy()),\n      'plugin:uninstall:uninstall': () => BbPromise.bind(this)\n        .then(() => {\n          return this.init()\n            .then(() => this.cleanUpAllLayers())\n        }),\n      'remove:remove': () => BbPromise.bind(this)\n        .then(() => {\n          return this.init()\n            .then(() => this.cleanUpAllLayers())\n        })\n    };\n  }\n\n  async init() {\n    if (this.initialized) {\n      return;\n    }\n\n    this.provider = this.serverless.getProvider('aws');\n    this.service = this.serverless.service;\n    this.options.region = this.provider.getRegion();\n\n    // bindings\n    this.log = this.log.bind(this);\n    this.main = this.main.bind(this);\n\n    const version = this.serverless.getVersion();\n\n    if (semver.lt(version, '1.34.0')) {\n      this.log(`Error: Please install serverless >= 1.34.0 (current ${this.serverless.getVersion()})`);\n      process.exit(1);\n    }\n  }\n\n  async deployLayers() {\n    this.runtimes = new Runtimes(this);\n    const settings = this.getSettings();\n\n    const cliOpts = this.provider.options;\n\n    for (const layerName in settings) {\n      const currentSettings = settings[layerName];\n      const enabledFuncs = currentSettings.functions;\n\n      // deploying a single function\n      const deploySingle = !!(cliOpts.function && enabledFuncs);\n\n      // skip layers that is not related with specified function\n      if (deploySingle && enabledFuncs.indexOf(cliOpts.function) === -1) {\n        continue;\n      }\n\n      this.logGroup(layerName);\n      await this.initServices(layerName, currentSettings);\n      await this.main();\n    }\n\n    console.log('\\n');\n  }\n\n  async cleanUpAllLayers() {\n    this.runtimes = new Runtimes(this);\n    const settings = this.getSettings();\n    for (const layerName in settings) {\n      const currentSettings = settings[layerName];\n      this.logGroup(layerName);\n\n      if (currentSettings.arn) {\n        this.warn(` (skipped) arn: ${currentSettings.arn}`);\n        continue;\n      }\n\n      await this.initServices(layerName, currentSettings);\n      await this.cleanUpLayers();\n    }\n  }\n\n  async initServices(layerName, settings) {\n    this.currentLayerName = layerName;\n    this.settings = settings;\n    this.zipService = new ZipService(this);\n    this.dependencies = new Dependencies(this);\n    this.localFolders = new LocalFolders(this);\n    this.layersService = new LayersService(this);\n    this.bucketService = new BucketService(this);\n    this.cloudFormationService = new CloudFormationService(this);\n    this.initialized = true;\n  }\n\n  mergeCommonSettings(inboundSetting) {\n    return {\n      path: '.',\n      functions: null,\n      dependencyInstall: true,\n      compileDir: '.serverless',\n      customInstallationCommand: null,\n      layersDeploymentBucket: this.service.provider.deploymentBucket,\n      ...this.runtimes.getDefaultSettings(inboundSetting)\n    };\n  }\n\n  getSettings() {\n    const inboundSettings = (this.serverless.service.custom || {})[\n      'serverless-layers'\n    ];\n\n    if (Array.isArray(inboundSettings)) {\n      const settings = {};\n      inboundSettings.forEach(inboundSetting => {\n        const layerName = Object.keys(inboundSetting)[0];\n        settings[layerName] = this.mergeCommonSettings(inboundSetting[layerName]);\n      });\n      return settings;\n    }\n\n    return {\n      default: this.mergeCommonSettings(inboundSettings)\n    }\n  }\n\n  hasSettingsChanged() {\n    // don't check settings changes twice\n    if (this.hasSettingsVerified) {\n      return false;\n    }\n\n    // by pass settings\n    if (!this.settings.localDir) {\n      return false;\n    }\n\n    const manifest = '__meta__/manifest-settings.json';\n    const currentSettings = JSON.stringify(this.settings);\n\n    // settings checked\n    this.hasSettingsVerified = true;\n\n    return this.bucketService.getFile(manifest).then((remoteSettings) => {\n\n      // create and return true (changed)\n      if (!remoteSettings) {\n        return this.bucketService.putFile(manifest, currentSettings)\n          .then(() => true);\n      }\n\n      if (remoteSettings !== currentSettings) {\n        return this.bucketService.putFile(manifest, currentSettings)\n          .then(() => true);\n      }\n\n      return false;\n    });\n  }\n\n  async main() {\n    // static ARN\n    if (this.settings.arn) {\n      this.relateLayerWithFunctions(this.settings.arn);\n      return;\n    }\n\n    await this.runtimes.init();\n    await this.dependencies.init();\n    await this.localFolders.init();\n\n    // it avoids issues if user changes some configuration\n    // which will not be applied till dependencies be changed\n    let hasSettingsChanged = await this.hasSettingsChanged();\n\n    // check if directories content has changed\n    // comparing hash md5 remote with local folder\n    let hasFoldersChanged = false;\n    if (this.settings.localDir) {\n      hasFoldersChanged = await this.localFolders.hasFoldersChanged();\n    }\n\n    // check if dependencies has changed comparing\n    // remote package.json with local one\n    let hasDepsChanged = false;\n    if (this.settings.dependencyInstall) {\n      hasDepsChanged = await this.runtimes.hasDependencesChanged();\n    }\n\n    // check if something has changed\n    let hasChanged = (!hasFoldersChanged && !hasDepsChanged && !hasSettingsChanged);\n\n    // merge package default options\n    this.mergePackageOptions();\n\n    const currentLayerARN = await this.getLayerArn();\n    if (hasChanged && currentLayerARN) {\n     this.log(`${chalk.inverse.green(' No changes ')}! Using same layer arn: ${this.logArn(currentLayerARN)}`);\n     this.relateLayerWithFunctions(currentLayerARN);\n     return;\n    }\n\n    // ENABLED by default\n    if (this.settings.dependencyInstall) {\n      await this.dependencies.install();\n    }\n\n    if (this.settings.localDir) {\n      await this.localFolders.copyFolders();\n    }\n\n    await this.zipService.package();\n    await this.bucketService.uploadZipFile();\n    const version = await this.layersService.publishVersion();\n    await this.bucketService.putFile(this.dependencies.getDepsPath());\n\n    this.relateLayerWithFunctions(version.LayerVersionArn);\n  }\n\n  getLayerName() {\n    const stackName = this.getStackName();\n    const { runtimeDir } = this.settings;\n    return slugify(`${stackName}-${runtimeDir}-${this.currentLayerName}`, {\n      lower: true,\n      replacement: '-'\n    });\n  }\n\n  getStackName() {\n    return this.provider.naming.getStackName();\n  }\n\n  getBucketName() {\n    if (!this.settings.layersDeploymentBucket) {\n      throw new Error(\n        'Please, you should specify \"deploymentBucket\" or \"layersDeploymentBucket\" option for this plugin!\\n'\n      );\n    }\n    return this.settings.layersDeploymentBucket;\n  }\n\n  getPathZipFileName() {\n    return `${path.join(process.cwd(), this.settings.compileDir, this.getLayerName())}.zip`;\n  }\n\n  getBucketLayersPath() {\n    const serviceStage = `${this.serverless.service.service}/${this.options.stage}`;\n\n    let deploymentPrefix = 'serverless';\n    if (this.provider.getDeploymentPrefix) {\n      deploymentPrefix = this.provider.getDeploymentPrefix();\n    }\n\n    return path.join(\n      deploymentPrefix,\n      serviceStage,\n      'layers'\n    ).replace(/\\\\/g, '/');\n  }\n\n  async getLayerArn() {\n    if (!this.cacheObject.layersArn) {\n      this.cacheObject.layersArn = {};\n    }\n\n    // returns cached arn\n    if (this.cacheObject.layersArn[this.currentLayerName]) {\n      return this.cacheObject.layersArn[this.currentLayerName];\n    }\n\n    const outputs = await this.cloudFormationService.getOutputs();\n\n\n    if (!outputs) return null;\n\n    const logicalId = this.getOutputLogicalId();\n\n    const arn = (outputs.find(x => x.OutputKey === logicalId) || {}).OutputValue;\n\n    // cache arn\n    this.cacheObject.layersArn[this.currentLayerName] = arn;\n\n    return arn;\n  }\n\n  getOutputLogicalId() {\n    return this.provider.naming.getLambdaLayerOutputLogicalId(this.getLayerName());\n  }\n\n  mergePackageOptions() {\n    const { packageExclude } = this.settings;\n    const pkg = this.service.package;\n\n    const opts = {\n      individually: false,\n      excludeDevDependencies: false,\n      exclude: []\n    };\n\n    this.service.package = {...opts, ...pkg};\n\n    for (const excludeFile of packageExclude) {\n      const hasRule = (this.service.package.exclude || '').indexOf(excludeFile);\n      if (hasRule === -1) {\n        this.service.package.exclude.push(excludeFile);\n      }\n    }\n  }\n\n  relateLayerWithFunctions(layerArn) {\n    this.log('Adding layers...');\n    const { functions } = this.service;\n    const funcs = this.settings.functions;\n    const cliOpts = this.provider.options;\n\n    Object.keys(functions).forEach(funcName => {\n      if (cliOpts.function && cliOpts.function !== funcName) {\n        return;\n      }\n\n      let isEnabled = !funcs;\n\n      if (Array.isArray(funcs) && funcs.indexOf(funcName) !== -1) {\n        isEnabled = true;\n      }\n\n      if (isEnabled) {\n        functions[funcName].layers = functions[funcName].layers || [];\n        functions[funcName].layers.push(layerArn);\n        functions[funcName].layers = Array.from(new Set(functions[funcName].layers));\n        this.log(`function.${chalk.magenta.bold(funcName)} - ${this.logArn(layerArn)}`, ' ✓');\n      } else {\n        this.warn(`(Skipped) function.${chalk.magenta.bold(funcName)}`, ` x`);\n      }\n    });\n\n    this.service.resources = this.service.resources || {};\n    this.service.resources.Outputs = this.service.resources.Outputs || {};\n\n    const outputName = this.getOutputLogicalId();\n\n    Object.assign(this.service.resources.Outputs, {\n      [outputName]: {\n        Value: layerArn,\n        Export: {\n          Name: outputName\n        }\n      }\n    });\n  }\n\n  getDependenciesList() {\n    return Object.keys((this.localPackage.dependencies||[])).map(x => (\n      `${x}@${this.localPackage.dependencies[x]}`\n    ));\n  }\n\n  async finalizeDeploy() {\n    const cliOpts = this.provider.options;\n    this.logGroup(\"Layers Info\");\n    Object.keys(this.service.functions).forEach(funcName => {\n      const lambdaFunc = this.service.functions[funcName];\n      const layers = lambdaFunc.layers || [];\n\n      if (!cliOpts.function && layers.length === 0) {\n        this.warn(`(skipped) function.${chalk.magenta.bold(funcName)}`);\n        return;\n      }\n\n      layers.forEach((currentLayerARN) => {\n        if (cliOpts.function && cliOpts.function === funcName) {\n          this.log(`function.${chalk.magenta.bold(funcName)} = layers.${this.logArn(currentLayerARN)}`);\n          return;\n        }\n        this.log(`function.${chalk.magenta.bold(funcName)} = layers.${this.logArn(currentLayerARN)}`);\n      });\n    });\n    console.log('\\n');\n  }\n\n  log(msg, signal=' ○') {\n    console.log('...' + `${chalk.greenBright.bold(signal)} ${chalk.white(msg)}`);\n  }\n\n  logGroup(msg) {\n    console.log('\\n');\n    this.serverless.cli.log(`[ LayersPlugin ]: ${chalk.magenta.bold('=>')} ${chalk.greenBright.bold(msg)}`);\n  }\n\n  warn(msg, signal=' ∅') {\n    console.log('...' + chalk.yellowBright(`${chalk.yellowBright.bold(signal)} ${msg}`));\n  }\n\n  error(msg, signal=' ⊗') {\n    console.log('...' + chalk.red(`${signal} ${chalk.white.bold(msg)}`));\n  }\n\n  cleanUpLayers() {\n    return this.layersService.cleanUpLayers();\n  }\n\n  logArn(arn) {\n    let pattern = /arn:aws:lambda:([^:]+):([0-9]+):layer:([^:]+):([0-9]+)/g;\n    let region = chalk.bold('$1');\n    let name = chalk.magenta('$3');\n    let formated = chalk.white(`arn:aws:lambda:${region}:*********:${name}:$4`);\n\n    let text = \"\";\n    switch (typeof arn) {\n      case 'object':\n        if (arn.Ref) {\n          text = `logicalId:[${chalk.bold('Ref')}=`;\n          text += `${chalk.magenta(arn.Ref)}]`;\n        }\n        break;\n      case 'string':\n        text = arn;\n        break;\n      default:\n        text = String(arn);\n        break;\n    }\n    return text.replace(pattern, formated);\n  }\n}\n\nmodule.exports = ServerlessLayers;\n"],"file":"index.js"}