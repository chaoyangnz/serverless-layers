{"version":3,"sources":["../src/AbstractService.js"],"names":["path","require","AbstractService","constructor","plugin","stackName","getStackName","layerName","getLayerName","bucketName","getBucketName","provider","dependenceFilename","join","getBucketLayersPath","settings","dependenciesPath","zipFileKeyName","test","process","platform","replace","getLayerPackageDir","compileDir","runtimeDir","cwd","module","exports"],"mappings":";;AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAMC,eAAN,CAAsB;AACpBC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,SAAKA,MAAL,GAAcA,MAAd;AAEA,SAAKC,SAAL,GAAiBD,MAAM,CAACE,YAAP,EAAjB;AACA,SAAKC,SAAL,GAAiBH,MAAM,CAACI,YAAP,EAAjB;AACA,SAAKC,UAAL,GAAkBL,MAAM,CAACM,aAAP,EAAlB;AACA,SAAKC,QAAL,GAAgB,KAAKP,MAAL,CAAYO,QAA5B;AAEA,SAAKC,kBAAL,GAA0BZ,IAAI,CAACa,IAAL,CAAUT,MAAM,CAACU,mBAAP,EAAV,EAAwC,KAAKV,MAAL,CAAYW,QAAZ,CAAqBC,gBAA7D,CAA1B;AACA,SAAKC,cAAL,GAAuB,GAAEjB,IAAI,CAACa,IAAL,CAAU,KAAKT,MAAL,CAAYU,mBAAZ,EAAV,EAA6C,KAAKP,SAAlD,CAA6D,MAAtF;;AAEA,QAAI,OAAOW,IAAP,CAAYC,OAAO,CAACC,QAApB,CAAJ,EAAmC;AACjC,WAAKH,cAAL,GAAsB,KAAKA,cAAL,CAAoBI,OAApB,CAA4B,KAA5B,EAAmC,GAAnC,CAAtB;AACA,WAAKT,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBS,OAAxB,CAAgC,KAAhC,EAAuC,GAAvC,CAA1B;AACD;AACF;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA6B,KAAKpB,MAAL,CAAYW,QAA/C;AACA,WAAOf,IAAI,CAACa,IAAL,CAAUM,OAAO,CAACM,GAAR,EAAV,EAAyBF,UAAzB,EAAqC,QAArC,EAA+CC,UAA/C,CAAP;AAAkE;AACnE;;AArBmB;;AAwBtBE,MAAM,CAACC,OAAP,GAAiBzB,eAAjB","sourcesContent":["const path = require('path');\n\nclass AbstractService {\n  constructor(plugin) {\n    this.plugin = plugin;\n\n    this.stackName = plugin.getStackName();\n    this.layerName = plugin.getLayerName();\n    this.bucketName = plugin.getBucketName();\n    this.provider = this.plugin.provider;\n\n    this.dependenceFilename = path.join(plugin.getBucketLayersPath(), this.plugin.settings.dependenciesPath);\n    this.zipFileKeyName = `${path.join(this.plugin.getBucketLayersPath(), this.layerName)}.zip`;\n\n    if (/^win/.test(process.platform)) {\n      this.zipFileKeyName = this.zipFileKeyName.replace(/\\\\/g, '/');\n      this.dependenceFilename = this.dependenceFilename.replace(/\\\\/g, '/');\n    }\n  }\n\n  getLayerPackageDir() {\n    const { compileDir, runtimeDir } = this.plugin.settings;\n    return path.join(process.cwd(), compileDir, 'layers', runtimeDir);;\n  }\n}\n\nmodule.exports = AbstractService\n"],"file":"AbstractService.js"}