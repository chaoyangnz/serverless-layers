{"version":3,"sources":["../../src/runtimes/ruby.js"],"names":["fs","require","path","RubyRuntime","constructor","parent","runtime","runtimeDir","plugin","default","libraryFolder","packageManager","dependenciesPath","compatibleRuntimes","copyBeforeInstall","copyAfterInstall","from","to","packageExclude","commands","bundle","init","settings","localpackageJson","join","process","cwd","localPackage","readFileSync","toString","e","log","exit","isCompatibleVersion","osVersion","run","runtimeVersion","match","version","isCompatible","startsWith","isDiff","depsA","depsB","hasDependencesChanged","remotePackage","bucketService","downloadDependencesFile","isDifferent","module","exports"],"mappings":";;AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAGA,MAAME,WAAN,CAAkB;AAChBC,EAAAA,WAAW,CAACC,MAAD,EAASC,OAAT,EAAkBC,UAAlB,EAA8B;AACvC,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKG,MAAL,GAAcH,MAAM,CAACG,MAArB;AAEA,SAAKC,OAAL,GAAe;AACbH,MAAAA,OADa;AAEbC,MAAAA,UAFa;AAGbG,MAAAA,aAAa,EAAE,MAHF;AAIbC,MAAAA,cAAc,EAAG,QAJJ;AAKbC,MAAAA,gBAAgB,EAAE,SALL;AAMbC,MAAAA,kBAAkB,EAAE,CAACP,OAAD,CANP;AAObQ,MAAAA,iBAAiB,EAAE,CACjB,cADiB,CAPN;AAUbC,MAAAA,gBAAgB,EAAE,CAChB;AAAEC,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,EAAE,EAAE;AAApB,OADgB,CAVL;AAabC,MAAAA,cAAc,EAAE,CACd,iBADc,EAEd,cAFc,EAGd,mBAHc,EAId,WAJc,EAKd,SALc;AAbH,KAAf;AAsBA,SAAKC,QAAL,GAAgB;AACdC,MAAAA,MAAM,EAAG,4BAA2B,KAAKX,OAAL,CAAaG,gBAAiB;AADpD,KAAhB;AAGD;;AAEDS,EAAAA,IAAI,GAAG;AACL,UAAM;AAAET,MAAAA;AAAF,QAAuB,KAAKJ,MAAL,CAAYc,QAAzC;AAEA,UAAMC,gBAAgB,GAAGrB,IAAI,CAACsB,IAAL,CACvBC,OAAO,CAACC,GAAR,EADuB,EAEvBd,gBAFuB,CAAzB;;AAKA,QAAI;AACF,WAAKe,YAAL,GAAoB3B,EAAE,CAAC4B,YAAH,CAAgBL,gBAAhB,EAAkCM,QAAlC,EAApB;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACV,WAAKtB,MAAL,CAAYuB,GAAZ,CAAiB,uBAAsBR,gBAAiB,GAAxD;AACAE,MAAAA,OAAO,CAACO,IAAR,CAAa,CAAb;AACD;AACF;;AAED,QAAMC,mBAAN,CAA0B3B,OAA1B,EAAmC;AACjC,UAAM4B,SAAS,GAAG,MAAM,KAAK7B,MAAL,CAAY8B,GAAZ,CAAgB,gBAAhB,CAAxB;AACA,UAAM,CAACC,cAAD,IAAmB9B,OAAO,CAAC+B,KAAR,CAAc,aAAd,CAAzB;AACA,WAAO;AACLC,MAAAA,OAAO,EAAEJ,SADJ;AAELK,MAAAA,YAAY,EAAEL,SAAS,CAACM,UAAV,CAAsB,QAAOJ,cAAe,EAA5C;AAFT,KAAP;AAID;;AAEDK,EAAAA,MAAM,CAACC,KAAD,EAAQC,KAAR,EAAe;AACnB,QAAI,CAACD,KAAL,EAAY;AACV,aAAO,IAAP;AACD;;AACD,WAAOA,KAAK,KAAKC,KAAjB;AACD;;AAED,QAAMC,qBAAN,GAA8B;AAC5B,UAAMC,aAAa,GAAG,MAAM,KAAKrC,MAAL,CAAYsC,aAAZ,CAA0BC,uBAA1B,EAA5B;AAEA,QAAIC,WAAW,GAAG,IAAlB;;AAEA,QAAIH,aAAJ,EAAmB;AACjB,WAAKrC,MAAL,CAAYuB,GAAZ,CAAiB,aAAY,KAAKtB,OAAL,CAAaG,gBAAiB,kBAA3D;AACAoC,MAAAA,WAAW,GAAG,MAAM,KAAKP,MAAL,CAAYI,aAAZ,EAA2B,KAAKlB,YAAhC,CAApB;AACD;;AAED,WAAOqB,WAAP;AACD;;AA3Ee;;AA8ElBC,MAAM,CAACC,OAAP,GAAiB/C,WAAjB","sourcesContent":["const fs = require('fs');\nconst path = require('path');\n\n\nclass RubyRuntime {\n  constructor(parent, runtime, runtimeDir) {\n    this.parent = parent;\n    this.plugin = parent.plugin;\n\n    this.default = {\n      runtime,\n      runtimeDir,\n      libraryFolder: 'gems',\n      packageManager:  'bundle',\n      dependenciesPath: 'Gemfile',\n      compatibleRuntimes: [runtime],\n      copyBeforeInstall: [\n        'Gemfile.lock'\n      ],\n      copyAfterInstall: [\n        { from: 'ruby', to: 'gems' }\n      ],\n      packageExclude: [\n        'node_modules/**',\n        'package.json',\n        'package-lock.json',\n        'vendor/**',\n        '.bundle'\n      ]\n    };\n\n    this.commands = {\n      bundle: `bundle install --gemfile=${this.default.dependenciesPath} --path=./`,\n    };\n  }\n\n  init() {\n    const { dependenciesPath } = this.plugin.settings;\n\n    const localpackageJson = path.join(\n      process.cwd(),\n      dependenciesPath\n    );\n\n    try {\n      this.localPackage = fs.readFileSync(localpackageJson).toString();\n    } catch (e) {\n      this.plugin.log(`Error: Can not find ${localpackageJson}!`);\n      process.exit(1);\n    }\n  }\n\n  async isCompatibleVersion(runtime) {\n    const osVersion = await this.parent.run('ruby --version');\n    const [runtimeVersion] = runtime.match(/[0-9].[0-9]/);\n    return {\n      version: osVersion,\n      isCompatible: osVersion.startsWith(`ruby ${runtimeVersion}`)\n    };\n  }\n\n  isDiff(depsA, depsB) {\n    if (!depsA) {\n      return true;\n    }\n    return depsA !== depsB;\n  }\n\n  async hasDependencesChanged() {\n    const remotePackage = await this.plugin.bucketService.downloadDependencesFile();\n\n    let isDifferent = true;\n\n    if (remotePackage) {\n      this.plugin.log(`Comparing ${this.default.dependenciesPath} dependencies...`);\n      isDifferent = await this.isDiff(remotePackage, this.localPackage);\n    }\n\n    return isDifferent;\n  }\n}\n\nmodule.exports = RubyRuntime;\n"],"file":"ruby.js"}