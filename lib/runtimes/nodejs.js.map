{"version":3,"sources":["../../src/runtimes/nodejs.js"],"names":["path","require","NodeJSRuntime","constructor","parent","runtime","runtimeDir","plugin","default","libraryFolder","packageManager","dependenciesPath","compatibleRuntimes","copyBeforeInstall","packageExclude","commands","npm","yarn","init","settings","localpackageJson","join","process","cwd","localPackage","e","log","exit","isCompatibleVersion","osVersion","run","runtimeVersion","match","version","isCompatible","startsWith","isDiff","depsA","depsB","depsKeyA","Object","keys","depsKeyB","isSizeEqual","length","hasDifference","forEach","dependence","hasDependencesChanged","remotePackage","bucketService","downloadDependencesFile","isDifferent","parsedRemotePackage","JSON","parse","dependencies","module","exports"],"mappings":"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","sourcesContent":["const path = require('path');\n\nclass NodeJSRuntime {\n  constructor(parent, runtime, runtimeDir) {\n    this.parent = parent;\n    this.plugin = parent.plugin;\n\n    this.default = {\n      runtime,\n      runtimeDir,\n      libraryFolder: 'node_modules',\n      packageManager:  'npm',\n      dependenciesPath: 'package.json',\n      compatibleRuntimes: [runtimeDir],\n      copyBeforeInstall: [\n        '.npmrc',\n        'yarn.lock',\n        'package-lock.json'\n      ],\n      packageExclude: [\n        'node_modules/**',\n      ]\n    };\n\n    this.commands = {\n      npm: 'npm install --production --only=prod',\n      yarn: 'yarn --production'\n    };\n  }\n\n  init() {\n    const { dependenciesPath } = this.plugin.settings;\n\n    const localpackageJson = path.join(\n      process.cwd(),\n      dependenciesPath\n    );\n\n    try {\n      this.localPackage = require(localpackageJson);\n    } catch (e) {\n      this.plugin.log(`Error: Can not find ${localpackageJson}!`);\n      process.exit(1);\n    }\n  }\n\n  async isCompatibleVersion(runtime) {\n    const osVersion = await this.parent.run('node --version');\n    const [runtimeVersion] = runtime.match(/([0-9]+)\\./);\n    return {\n      version: osVersion,\n      isCompatible: osVersion.startsWith(`v${runtimeVersion}`)\n    };\n  }\n\n  isDiff(depsA, depsB) {\n    if (!depsA) {\n      return true;\n    }\n\n    const depsKeyA = Object.keys(depsA);\n    const depsKeyB = Object.keys(depsB);\n    const isSizeEqual = depsKeyA.length === depsKeyB.length;\n\n    if (!isSizeEqual) return true;\n\n    let hasDifference = false;\n    Object.keys(depsA).forEach(dependence => {\n      if (depsA[dependence] !== depsB[dependence]) {\n        hasDifference = true;\n      }\n    });\n\n    return hasDifference;\n  }\n\n  async hasDependencesChanged() {\n    const remotePackage = await this.plugin.bucketService.downloadDependencesFile();\n\n    let isDifferent = true;\n\n    if (remotePackage) {\n      const parsedRemotePackage = JSON.parse(remotePackage);\n      const { dependencies } = parsedRemotePackage;\n      this.plugin.log('Comparing package.json dependencies...');\n      isDifferent = await this.isDiff(dependencies, this.localPackage.dependencies);\n    }\n\n    return isDifferent;\n  }\n}\n\nmodule.exports = NodeJSRuntime;\n"],"file":"nodejs.js"}