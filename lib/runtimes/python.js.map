{"version":3,"sources":["../../src/runtimes/python.js"],"names":["fs","require","path","PythonRuntime","constructor","parent","runtime","runtimeDir","plugin","default","libraryFolder","packageManager","dependenciesPath","compatibleRuntimes","copyBeforeInstall","packageExclude","commands","pip","init","settings","localpackageJson","join","process","cwd","localPackage","readFileSync","toString","e","log","exit","isCompatibleVersion","osVersion","run","runtimeVersion","match","version","isCompatible","startsWith","isDiff","depsA","depsB","hasDependencesChanged","remotePackage","bucketService","downloadDependencesFile","isDifferent","module","exports"],"mappings":";;AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAME,aAAN,CAAoB;AAClBC,EAAAA,WAAW,CAACC,MAAD,EAASC,OAAT,EAAkBC,UAAlB,EAA8B;AACvC,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKG,MAAL,GAAcH,MAAM,CAACG,MAArB;AAEA,SAAKC,OAAL,GAAe;AACbH,MAAAA,OADa;AAEbC,MAAAA,UAFa;AAGbG,MAAAA,aAAa,EAAE,eAHF;AAIbC,MAAAA,cAAc,EAAG,KAJJ;AAKbC,MAAAA,gBAAgB,EAAE,kBALL;AAMbC,MAAAA,kBAAkB,EAAE,CAACP,OAAD,CANP;AAObQ,MAAAA,iBAAiB,EAAE,EAPN;AAQbC,MAAAA,cAAc,EAAE,CACd,cADc,EAEd,mBAFc,EAGd,iBAHc;AARH,KAAf;AAeA,SAAKC,QAAL,GAAgB;AACdC,MAAAA,GAAG,EAAG,kBAAiB,KAAKR,OAAL,CAAaG,gBAAiB;AADvC,KAAhB;AAGD;;AAEDM,EAAAA,IAAI,GAAG;AACL,UAAM;AAAEN,MAAAA;AAAF,QAAuB,KAAKJ,MAAL,CAAYW,QAAzC;AAEA,UAAMC,gBAAgB,GAAGlB,IAAI,CAACmB,IAAL,CACvBC,OAAO,CAACC,GAAR,EADuB,EAEvBX,gBAFuB,CAAzB;;AAKA,QAAI;AACF,WAAKY,YAAL,GAAoBxB,EAAE,CAACyB,YAAH,CAAgBL,gBAAhB,EAAkCM,QAAlC,EAApB;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACV,WAAKnB,MAAL,CAAYoB,GAAZ,CAAiB,uBAAsBR,gBAAiB,GAAxD;AACAE,MAAAA,OAAO,CAACO,IAAR,CAAa,CAAb;AACD;AACF;;AAED,QAAMC,mBAAN,CAA0BxB,OAA1B,EAAmC;AACjC,UAAMyB,SAAS,GAAG,MAAM,KAAK1B,MAAL,CAAY2B,GAAZ,CAAgB,kBAAhB,CAAxB;AACA,UAAM,CAACC,cAAD,IAAmB3B,OAAO,CAAC4B,KAAR,CAAc,aAAd,CAAzB;AACA,WAAO;AACLC,MAAAA,OAAO,EAAEJ,SADJ;AAELK,MAAAA,YAAY,EAAEL,SAAS,CAACM,UAAV,CAAsB,UAASJ,cAAe,EAA9C;AAFT,KAAP;AAID;;AAEDK,EAAAA,MAAM,CAACC,KAAD,EAAQC,KAAR,EAAe;AACnB,QAAI,CAACD,KAAL,EAAY;AACV,aAAO,IAAP;AACD;;AACD,WAAOA,KAAK,KAAKC,KAAjB;AACD;;AAED,QAAMC,qBAAN,GAA8B;AAC5B,UAAMC,aAAa,GAAG,MAAM,KAAKlC,MAAL,CAAYmC,aAAZ,CAA0BC,uBAA1B,EAA5B;AAEA,QAAIC,WAAW,GAAG,IAAlB;;AAEA,QAAIH,aAAJ,EAAmB;AACjB,WAAKlC,MAAL,CAAYoB,GAAZ,CAAiB,aAAY,KAAKnB,OAAL,CAAaG,gBAAiB,kBAA3D;AACAiC,MAAAA,WAAW,GAAG,MAAM,KAAKP,MAAL,CAAYI,aAAZ,EAA2B,KAAKlB,YAAhC,CAApB;AACD;;AAED,WAAOqB,WAAP;AACD;;AApEiB;;AAuEpBC,MAAM,CAACC,OAAP,GAAiB5C,aAAjB","sourcesContent":["const fs = require('fs');\nconst path = require('path');\n\nclass PythonRuntime {\n  constructor(parent, runtime, runtimeDir) {\n    this.parent = parent;\n    this.plugin = parent.plugin;\n\n    this.default = {\n      runtime,\n      runtimeDir,\n      libraryFolder: 'site-packages',\n      packageManager:  'pip',\n      dependenciesPath: 'requirements.txt',\n      compatibleRuntimes: [runtime],\n      copyBeforeInstall: [],\n      packageExclude: [\n        'package.json',\n        'package-lock.json',\n        'node_modules/**',\n      ]\n    };\n\n    this.commands = {\n      pip: `pip install -r ${this.default.dependenciesPath} -t .`,\n    };\n  }\n\n  init() {\n    const { dependenciesPath } = this.plugin.settings;\n\n    const localpackageJson = path.join(\n      process.cwd(),\n      dependenciesPath\n    );\n\n    try {\n      this.localPackage = fs.readFileSync(localpackageJson).toString();\n    } catch (e) {\n      this.plugin.log(`Error: Can not find ${localpackageJson}!`);\n      process.exit(1);\n    }\n  }\n\n  async isCompatibleVersion(runtime) {\n    const osVersion = await this.parent.run('python --version');\n    const [runtimeVersion] = runtime.match(/[0-9].[0-9]/);\n    return {\n      version: osVersion,\n      isCompatible: osVersion.startsWith(`Python ${runtimeVersion}`)\n    };\n  }\n\n  isDiff(depsA, depsB) {\n    if (!depsA) {\n      return true;\n    }\n    return depsA !== depsB;\n  }\n\n  async hasDependencesChanged() {\n    const remotePackage = await this.plugin.bucketService.downloadDependencesFile();\n\n    let isDifferent = true;\n\n    if (remotePackage) {\n      this.plugin.log(`Comparing ${this.default.dependenciesPath} dependencies...`);\n      isDifferent = await this.isDiff(remotePackage, this.localPackage);\n    }\n\n    return isDifferent;\n  }\n}\n\nmodule.exports = PythonRuntime;\n"],"file":"python.js"}